import random
from datetime import datetime
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –°–ø–∏—Å–æ–∫ —á–µ–ª–µ–Ω–¥–∂—ñ–≤
challenges = [
    "–ü—Ä–æ–π–¥–∏ 8000 –∫—Ä–æ–∫—ñ–≤ —Å—å–æ–≥–æ–¥–Ω—ñ!",
    "–ù–µ –∫–æ—Ä–∏—Å—Ç—É–π—Å—è —Å–æ—Ü–º–µ—Ä–µ–∂–∞–º–∏ 2 –≥–æ–¥–∏–Ω–∏.",
    "–ó—Ä–æ–±–∏ 10 —Ö–≤–∏–ª–∏–Ω —Ñ—ñ–∑–∏—á–Ω–∏—Ö –≤–ø—Ä–∞–≤.",
    "–ü—Ä–æ—á–∏—Ç–∞–π 5 —Å—Ç–æ—Ä—ñ–Ω–æ–∫ –∫–Ω–∏–≥–∏.",
    "–ü–æ–¥–∑–≤–æ–Ω–∏ –±–ª–∏–∑—å–∫—ñ–π –ª—é–¥–∏–Ω—ñ.",
    "–í–∏–ø–∏–π 2 –ª—ñ—Ç—Ä–∏ –≤–æ–¥–∏.",
    "–í–∏–≤—á–∏ 5 –Ω–æ–≤–∏—Ö –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö —Å–ª—ñ–≤.",
    "–ù–∞–ø–∏—à–∏ –ø–ª–∞–Ω –Ω–∞ –∑–∞–≤—Ç—Ä–∞.",
    "–ü–æ–ø—Ä–∏–±–∏—Ä–∞–π –Ω–∞ —Ä–æ–±–æ—á–æ–º—É —Å—Ç–æ–ª—ñ.",
    "–í—ñ–¥–ø–æ—á–∏–Ω—å –±–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ 30 —Ö–≤–∏–ª–∏–Ω."
]

# –ú–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω—ñ —Ü–∏—Ç–∞—Ç–∏
quotes = [
    "–¢–∏ –∑–º–æ–∂–µ—à, —è–∫—â–æ –±—É–¥–µ—à —Å—Ç–∞—Ä–∞—Ç–∏—Å—è!",
    "–ù–µ –±—ñ–≥–∞–π –∑–∞ —É—Å–ø—ñ—Ö–æ–º. –°—Ç–∞–Ω—å —É—Å–ø—ñ—Ö–æ–º!",
    "–¢—Ä—É–¥–Ω–æ—â—ñ ‚Äî —Ü–µ —Å—Ö–æ–¥–∏ –¥–æ —É—Å–ø—ñ—Ö—É.",
    "–ù—ñ–∫–æ–ª–∏ –Ω–µ –∑–¥–∞–≤–∞–π—Å—è!",
    "–í–µ–ª–∏–∫–∏–π —É—Å–ø—ñ—Ö –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ –º–∞–ª–µ–Ω—å–∫–∏—Ö –∫—Ä–æ–∫—ñ–≤."
]

# –°–ø–∏—Å–æ–∫ –º–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω–∏—Ö —Ñ—Ä–∞–∑
motivations = [
    "–ö–æ–∂–µ–Ω –¥–µ–Ω—å ‚Äî —Ü–µ —à–∞–Ω—Å –∑—Ä–æ–±–∏—Ç–∏ –∫—Ä–æ–∫ –¥–æ —Å–≤–æ—ó—Ö –º—Ä—ñ–π.",
    "–ù–µ –±—ñ–π—Å—è –ø—Ä–æ–≥—Ä–∞—Ç–∏. –ë—ñ–π—Å—è –Ω–µ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏.",
    "–¢–∏ –∑–¥–∞—Ç–µ–Ω –Ω–∞ –±—ñ–ª—å—à–µ, –Ω—ñ–∂ –¥—É–º–∞—î—à.",
    "–í—Å–µ, —â–æ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è —É—Å–ø—ñ—Ö—É ‚Äî —Ü–µ –≤—ñ—Ä–∞ –≤ —Å–µ–±–µ.",
    "–ö—Ä–æ–∫ –∑–∞ –∫—Ä–æ–∫–æ–º, —Ç–∏ –¥–æ—Å—è–≥–Ω–µ—à –º–µ—Ç–∏!"
]

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('–ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫. –©–æ –∑—Ä–æ–±–∏–º–æ —Å—å–æ–≥–æ–¥–Ω—ñ?')

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /motivation
async def motivation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    selected_motivation = random.choice(motivations)
    await update.message.reply_text(f"–ú–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω–∞ —Ñ—Ä–∞–∑–∞: {selected_motivation}")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /quote
async def quote(update: Update, context: ContextTypes.DEFAULT_TYPE):
    selected_quote = random.choice(quotes)
    await update.message.reply_text(f"–¶–∏—Ç–∞—Ç–∞ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ: {selected_quote}")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /challenge
async def challenge(update: Update, context: ContextTypes.DEFAULT_TYPE):
    selected_challenge = random.choice(challenges)
    await update.message.reply_text(f"–¢–≤—ñ–π —á–µ–ª–µ–Ω–¥–∂ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ:\n\n{selected_challenge}")

# –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–æ–∫ —ñ –¥–æ–¥–∞—î–º–æ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –¥–ª—è –∫–æ–∂–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏
app = ApplicationBuilder().token('7938270207:AAHUYWrqzNBv5DuoY6KsfJ7vDBF2GJ4dRjA').build()



from datetime import datetime
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –ü–µ—Ä–µ–∫–ª–∞–¥ –Ω–∞–∑–≤ –¥–Ω—ñ–≤
ua_days = {
    "Monday": "–ü–æ–Ω–µ–¥—ñ–ª–æ–∫", "Tuesday": "–í—ñ–≤—Ç–æ—Ä–æ–∫", "Wednesday": "–°–µ—Ä–µ–¥–∞",
    "Thursday": "–ß–µ—Ç–≤–µ—Ä", "Friday": "–ü‚Äô—è—Ç–Ω–∏—Ü—è", "Saturday": "–°—É–±–æ—Ç–∞", "Sunday": "–ù–µ–¥—ñ–ª—è"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ —Ä–æ–±–æ—Ç–∏
def get_work_schedule():
    today = datetime.now()
    date_limit = datetime(today.year, 4, 21)  # –ø—ñ—Å–ª—è 20 –∫–≤—ñ—Ç–Ω—è ‚Äî –Ω—ñ—á–Ω–∏—Ö –∑–º—ñ–Ω –Ω–µ–º–∞
    dow = ua_days[today.strftime("%A")]
    if today < date_limit and dow in ["–°–µ—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä", "–ü‚Äô—è—Ç–Ω–∏—Ü—è", "–°—É–±–æ—Ç–∞", "–ù–µ–¥—ñ–ª—è"]:
        return "–ù—ñ—á–Ω–∞ –∑–º—ñ–Ω–∞ 20:00‚Äì08:00"
    else:
        return "–°—å–æ–≥–æ–¥–Ω—ñ –≤–∏—Ö—ñ–¥–Ω–∏–π –∞–±–æ –∑–º—ñ–Ω–∞ —â–µ –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∞"
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑–∫–ª–∞–¥—É –∞–≤—Ç–æ–±—É—Å–∞
def get_bus_time():
    return "üöç –ê–≤—Ç–æ–±—É—Å:\n1-–∞ –∑–º—ñ–Ω–∞: 04:35\n2-–∞ –∑–º—ñ–Ω–∞: 16:38"

# –§—É–Ω–∫—Ü—ñ—è —á–µ—Ä–≥—É–≤–∞–Ω—å –∑–∞ –¥–∞—Ç–æ—é
def get_shift():
    today = datetime.now().date()
    if datetime(2025, 4, 28).date() <= today <= datetime(2025, 5, 4).date():
        return "üë©‚Äç‚öïÔ∏è –°—å–æ–≥–æ–¥–Ω—ñ —á–µ—Ä–≥—É—î: –û–∫—Å–∞–Ω–∞"
    elif datetime(2025, 5, 5).date() <= today <= datetime(2025, 5, 12).date():
        return "üë©‚Äç‚öïÔ∏è –°—å–æ–≥–æ–¥–Ω—ñ —á–µ—Ä–≥—É—î: –ú–∞—Ä—ñ—è"
    elif datetime(2025, 5, 13).date() <= today <= datetime(2025, 5, 20).date():
        return "üë©‚Äç‚öïÔ∏è –°—å–æ–≥–æ–¥–Ω—ñ —á–µ—Ä–≥—É—î: –î—ñ–∞–Ω–∞"
    else:
        return "–ß–µ—Ä–≥—É–≤–∞–Ω—å –Ω–∞ —Ü—é –¥–∞—Ç—É –Ω–µ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ"

# –ö–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞
async def work(update: Update, context: ContextTypes.DEFAULT_TYPE):
    day = ua_days[datetime.now().strftime("%A")]
    schedule = get_work_schedule()
    await update.message.reply_text(f"üìÖ –°—å–æ–≥–æ–¥–Ω—ñ: {day}\nüïí {schedule}")

async def bus(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(get_bus_time())

async def shift(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(get_shift())
# –î–æ–¥–∞—î–º–æ —Ö–µ–Ω–¥–ª–µ—Ä–∏
app.add_handler(CommandHandler('start', start))
app.add_handler(CommandHandler('motivation', motivation))
app.add_handler(CommandHandler('quote', quote))
app.add_handler(CommandHandler('challenge', challenge))
app.add_handler(CommandHandler('work', work))
app.add_handler(CommandHandler('bus', bus))
app.add_handler(CommandHandler('shift', shift))
# –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
app.run_polling()


app.run_polling()
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ.")
app.run_polling()
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ.")
app.run_polling()




